syntax = "proto3";

package user.v1;

import "types/v1/types.proto";

message GetAccountRequest {};
message GetAccountResponse {
  types.v1.Account account = 1;
};

message UpdateAccountRequest {
  optional string email = 2;
};
message UpdateAccountResponse {
  types.v1.Account account = 1;
};

message GetProfileRequest {
  string user_id = 1;
};
message GetProfileResponse {
  types.v1.Profile profile = 1;
};

message UpdateProfileRequest {
  optional string display_name = 2;
  optional string icon_path = 3;
  optional string status_message = 4;
  optional string metadata = 5;
};
message UpdateProfileResponse {
  types.v1.Profile profile = 1;
}

message AddFriendRequest {
  string user_id = 1;
}
message AddFriendResponse {}

message GetFriendsRequest {}
message GetFriendsResponse {
  repeated string user_ids = 1;
}

message BlockUserRequest {
  string user_id = 1;
}
message BlockUserResponse {}

message GetBlockingUsersRequest {}
message GetBlockingUsersResponse {
  repeated string user_ids = 1;
}

message UnBlockUserRequest {
  string user_id = 1;
}
message UnBlockUserResponse {}


service UserService {
  // アカウント
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {};
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse) {};

  // プロフィール
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {};
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {};

  // 友達
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse) {};
  rpc GetFriends(GetFriendsRequest) returns (GetFriendsResponse) {};
  
  // ブロック
  rpc BlockUser(BlockUserRequest) returns (BlockUserResponse) {};
  rpc GetBlockingUsers(GetBlockingUsersRequest) returns (GetBlockingUsersResponse) {};
  rpc UnBlockUser(UnBlockUserRequest) returns (UnBlockUserResponse) {};
}